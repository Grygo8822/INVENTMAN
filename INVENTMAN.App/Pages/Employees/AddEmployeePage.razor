@page "/employees/add"
@using INVENTMAN.Entities
@using INVENTMAN.UseCases.Employees.Interfaces

@inject IAddEmployeeUseCase AddEmployeeUseCase
@inject NavigationManager NavigationManager
@inject IToastService ToastService


@code {
    private Employee employee = new Employee();

    private async Task AddEmployee()
    {
        await AddEmployeeUseCase.AddEmployeeAsync(employee);
        ToastService.ShowSuccess("Sucessfuly added an employee!");
        NavigationManager.NavigateTo("/employees");
    }
}

<h3>Add Employee</h3>
<br />
<EditForm Model="employee" OnValidSubmit="AddEmployee">
 
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="name">Imie</label>
        <InputText id="name"
                   @bind-Value="employee.Name"
                   class="form-control">
        </InputText>
    </div>

    <div class="form-group">
        <label for="sn">Nazwisko</label>
        <InputText id="sn"
                   @bind-Value="employee.Surname"
                   class="form-control">
        </InputText>
    </div>

    <div class="form-group">
        <label for="sn">Email</label>
        <InputText id="sn"
                   @bind-Value="employee.Email"
                   class="form-control">
        </InputText>
    </div>

    <div class="form-group">
        <label for="sn">Email Przełożonego</label>
        <InputText id="sn"
                   @bind-Value="employee.ManagerEmail"
                   class="form-control">
        </InputText>
    </div>

  
    <br />
    <button type="submit"
            class="btn btn-primary">
        Dodaj pracownika
    </button>

</EditForm>
