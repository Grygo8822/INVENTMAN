@page "/equipment/add"
@using INVENTMAN.App.Components.Manufacturers
@using INVENTMAN.App.Components.Vendor
@using INVENTMAN.Entities
@using INVENTMAN.UseCases.Equipment.Interfaces
@using INVENTMAN.UseCases.Vendors.Interfaces
@using INVENTMAN.UseCases.Manufacturers.Interfaces


@inject IEquipmentAddUseCase EquipmentAddUseCase
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@inject ISearchVendorByNameUseCase SearchVendorByNameUseCase
@inject ISearchManufacturersByNameUseCase SearchManufacturersByNameUseCase


@code {
    private Item item = new Item();
    private List<Vendor>? vendors = new();
    private List<Manufacturer>? manufacturers = new();

    public Manufacturer manufacturerSelected { get; set; } = new();
    public Vendor vendorSelected { get; set; } = new();







    private async Task AddItem()
    {
            item.ManufacturerId = manufacturerSelected.ManufacturerId;
            item.VendorId = vendorSelected.VendorId;
            try 
            {
                await EquipmentAddUseCase.ExecuteAsync(item);
                ToastService.ShowSuccess("Pomyślnie utworzono przedmot!");
                NavigationManager.NavigateTo("/equipment");
            }
            catch
            {
                ToastService.ShowError("Wystąpił błąd, przedmot nie został utworzony.");
            }
            
        

       
    }

    protected async override Task OnInitializedAsync()
    {
        vendors = await SearchVendorByNameUseCase.ExecuteAsync() as List<Vendor>;


        manufacturers = await SearchManufacturersByNameUseCase.ExecuteAsync() as List<Manufacturer>;

        await base.OnInitializedAsync();
    }

    private void OnManufacturerSelected(Manufacturer manufacturer)
    {
        manufacturerSelected = manufacturer;
    }

    private void OnVendorSelected(Vendor vendor)
    {
        vendorSelected = vendor;
    }
}

<h3>Utwórz przedmiot</h3>
<br />
<EditForm Model="item" OnValidSubmit="AddItem">
    @*TODO: Walidacja wejść*@
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="row">

    <div class="col form-group">
        <label for="name">Model</label>
        <InputText
            id="name"
            @bind-Value="item.Name"
            class="form-control">
        </InputText>
    </div>

    <div class="col form-group">
        <label for="sn">Numer Seryjny</label>
        <InputText 
            id="sn"
            @bind-Value="item.SerialNumber"
            class="form-control">
        </InputText>
    </div>
    </div>

    <div class="form-group">
        <label for="desc">Opis</label>
        <InputText id="desc"
                   @bind-Value="item.Description"
                   class="form-control">
        </InputText>
    </div>

    <div class="row">

    <div class="col form-group">
        <label for="type">Typ</label>
        <InputSelect id="type"
                   @bind-Value="item.ItemType"
                   class="form-control">
                   @foreach (var type in Enum.GetValues(typeof(EquipmentType)))
                   {
                       <option value="@type">@type</option>
                   }
        </InputSelect>
    </div>

    <div class="col form-group">
        <label for="desc">Numer faktury</label>
        <InputText id="desc"
                   @bind-Value="item.InvoiceId"
                   class="form-control">
        </InputText>
    </div>

    </div>

    <div class="row">
       
    <div class="col form-group">
        <label> Producent </label>
        <p class="border form-control">Selected: @manufacturerSelected.Name</p>
        <SearchAndSelectManufacturerComponent  OnManufacturerSelected="OnManufacturerSelected"></SearchAndSelectManufacturerComponent>
    </div>

    <div class="col form-group">
        <label> Sprzedawca </label>
        <p class="border form-control">Selected: @vendorSelected.Name</p>
            <SearchAndSelectVendorComponent OnVendorSelected="OnVendorSelected"></SearchAndSelectVendorComponent>
    </div>
    </div>
    <br />
    <button 
        type="submit"
        class="btn btn-primary">
        Dodaj przedmiot
    </button>

</EditForm>
