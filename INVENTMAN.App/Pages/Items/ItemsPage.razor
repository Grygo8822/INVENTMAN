@page "/equipment"
@using INVENTMAN.App.Components.Items
@using INVENTMAN.Entities
@using INVENTMAN.UseCases.Equipment.Interfaces

@inject IEquipmentSearchAdvancedUseCase EquipmentSearchAdvancedUseCase
@inject NavigationManager NavigationManager

@code{
    private AuthenticationState authenticationState;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    public List<Item> items { get; set; } = new();

    private async Task OnEquipmentSearch(ItemSearch itemSearch)
    {
        items = (await EquipmentSearchAdvancedUseCase.ExecuteAsync
        (
            state: itemSearch.SelectedState,
            type: itemSearch.SelectedType,
            name: itemSearch.Name,
            serialNumber: itemSearch.Sn,
            manufacturer: itemSearch.Man,
            employeeName: itemSearch.Emp,
            vendor: itemSearch.Ven,
            invoiceId: itemSearch.Invoice
        )).ToList();
    }

    private void AddItem()
    {
        NavigationManager.NavigateTo("/equipment/add");
    }

    protected async override Task OnInitializedAsync()
    {
        items = (await EquipmentSearchAdvancedUseCase.ExecuteAsync(null, null, null, null, null, null, null, null)).ToList();

        if(authenticationStateTask != null)
            authenticationState = await authenticationStateTask;
    }
}

<PageTitle>Sprzęt</PageTitle>
<AdvancedSearchInventoryComponent OnItemSearchCallback="OnEquipmentSearch"></AdvancedSearchInventoryComponent>

<InventoryListComponent items="items">
</InventoryListComponent>
<br />

<button
    class="btn-primary"
    type="button"
    @onclick="AddItem"
    >Dodaj przedmiot</button>




   
    

